is_training: True

middle_result_log_dir_params:
    tensorboard_dir: "./logs/middle_result_logs/colorization/unet/log4tb"
    model_dir: "./logs/middle_result_logs/colorization/unet/log4model"
    note_dir: "./logs/middle_result_logs/colorization/unet/note"
    self_increasing_mode: False
    pattern: "unet"
    default_pattern: "test"

model_params:
    model_name: "UNet"

    image_size_x:  224
    image_size_y:  224
    image_size_z:  224
    classes_num: 2

training_params:
    k_folder: 1
    pretrained_model_path:
    unnecessary_keys: []
    special_model_load_method: 0

    multi_thread_data_dir: "./data/testSetPlaces205_resize/testSet_resize"
    data_pattern: "*.jpg"
    annotation_file_path: "./data/testSetPlaces205_resize/train.txt"
    hard_example_mining_file_path: # "./data/output_data/hard_example/"
    repeat_times: 3
    thread_num: 4
    classes_num: 0

    max_epoch: 1000000
    batch_size: 64
    gpu_num: 1
    gpu_device_num: [0] # , 1, 2, 4, 5, 6, 7]

    loss_function_name: "nn.MSELoss()"
    weight_decay: 1e-4

    optimizer_name: "optim.Adam"
    momentum: None # 0.9
    learning_rate: 1e-3
    learning_rate_decay: 0.95
    learning_rate_decay_step: 1000

    save_name: "unet"
    save_frequency: 50
    print_freq: 1

    output_data_path: "./data/output_data"
    result_file: "result.txt"
    retrain_sample_file: "hard_example/{}.csv"
    all_sample_file: "all_example/{}.csv"

testing_params:
    k_folder: 1
    pretrained_model_path:  "./logs/middle_result_logs/colorization/unet/log4model/unet_1/color_125.pth"
    unnecessary_keys: []
    special_model_load_method: 0

    flag_training_dataset: False
    flag_testing_dataset: True

    multi_thread_data_dir: "./data/testSetPlaces205_resize/testSet_resize"
    data_pattern: "*.jpg"
    annotation_file_path: "./data/testSetPlaces205_resize/test.csv"
    thread_num: 4
    classes_num: 2

    max_epoch: 1
    batch_size: 1
    gpu_num: 1
    gpu_device_num: [0]

    print_freq: 1

    output_data_path: "./data/output_data"
    result_file: "result.txt"
    retrain_sample_file: "hard_example/{}.csv"
    all_sample_file: "all_example/{}.csv"
